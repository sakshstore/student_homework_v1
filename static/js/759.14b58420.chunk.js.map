{"version":3,"file":"static/js/759.14b58420.chunk.js","mappings":"mSAkBe,SAASA,IAEpB,IAAQC,GAAgBC,EAAAA,EAAAA,MAAhBD,YAERE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAG1BI,GAAwBL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAEpBG,GAAsCT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzCE,EAAQD,EAAA,GAAEE,EAAiBF,EAAA,GAGlCG,GAAgCb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA0BjB,EAAAA,EAAAA,UAAS,KAAIkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAzBE,GAAFD,EAAA,GAAUA,EAAA,IACtBE,GAAqCpB,EAAAA,EAAAA,WAAS,GAAMqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAA7CE,EAAUD,EAAA,GAAEE,EAAcF,EAAA,GAEjCG,GAAkCxB,EAAAA,EAAAA,UAAS,GAAEyB,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAAtCE,EAAaD,EAAA,GAAEE,EAAQF,EAAA,GAC9BG,GAAuC5B,EAAAA,EAAAA,YAAU6B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAA1CE,EAAYD,EAAA,GAAEE,EAAcF,EAAA,GAC7BG,GAAWC,EAAAA,EAAAA,MACXC,GAAIC,EAAAA,EAAAA,YAAWC,EAAAA,GACjBC,EAAQH,EAAEG,MAGRC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGAC,EAAAA,EAAIC,IAAI,YAAcxB,EAAgB,IAAMI,EAAc,CACxEqB,QAAS,CACLC,OAAQ,mBACRC,cAAe,UAAYhB,KAEhC,KAAD,EALIO,EAAGE,EAAAQ,KAMTtC,EAAY4B,EAAIW,MAEhBhC,GAAe,GAAMuB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAGrB3B,EAAQ2B,EAAAU,IAAQ,yBAAAV,EAAAW,OAAA,GAAAd,EAAA,kBAKvB,kBAnBsB,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,MAqBvBC,EAAAA,EAAAA,YAAU,WAEiB,OAAnB1B,EAAE2B,aACF7B,EAAS,UAKT8B,EAAkBjE,EAO1B,GAAG,IAKH,IAAMkE,EAAe,SAACC,GAClB,IAAAC,EAA0BD,EAAEE,OAApBC,EAAIF,EAAJE,KAAMC,EAAOH,EAAPG,QAId,GAAa,cAATD,EAAsB,CACtB,IAAME,EAAetD,EAASuD,KAAI,SAACC,GAAW,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYD,GAAI,IAAEE,UAAWL,GAAU,IAErFpD,EAAYqD,EAChB,KAAO,CAGH,IAAMA,EAAetD,EAASuD,KAAI,SAACC,GAAI,OACnCA,EAAKG,KAAOP,GAAIK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAI,IAAEE,UAAWL,IAAYG,CAAI,IAM7DvD,EAAYqD,EAGhB,CAGJ,EAEMM,EAAY,eAAAC,GAAApC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAmC,IAAA,IAAAC,EAAAC,EAAAnC,EAAAoC,EAAA,OAAAvC,EAAAA,EAAAA,KAAAI,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,OAWhB,OATK8B,EAAc/D,EAASmE,QAAO,SAAAlB,GAAC,OAAoB,IAAhBA,EAAES,SAAkB,IAGzDM,EAAU,CAGV,YAAelF,EACf,SAAYiF,GAEfG,EAAAjC,KAAA,EAEiBC,EAAAA,EAAIkC,KAAK,qBAAsBJ,EAAS,CACtD5B,QAAS,CACL,eAAgB,YAAaE,cAAe,UAAYhB,KAE7D,KAAD,EAJIO,EAAGqC,EAAA3B,KASH0B,EAAKpC,EAAIW,KAEfnD,EAAW4E,EAAG7E,SAGdK,GAAQ,GAAM,wBAAAyE,EAAAxB,OAAA,GAAAoB,EAAA,KAEjB,kBA7BiB,OAAAD,EAAAlB,MAAA,KAAAC,UAAA,KAkCZG,EAAiB,eAAAsB,GAAA5C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA2C,EAAOxF,GAAW,IAAA+C,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAvC,KAAA,EAAAuC,EAAAtC,KAAA,EAGlBC,EAAAA,EAAIC,IAAI,mBAAqBrD,EAAa,CACxDsD,QAAS,CACL,eAAgB,YAAaE,cAAe,UAAYhB,KAE7D,KAAD,EAJIO,EAAG0C,EAAAhC,KAKT1C,EAAkBgC,EAAIW,MACtBhC,GAAe,GAAM+D,EAAAtC,KAAA,gBAAAsC,EAAAvC,KAAA,EAAAuC,EAAA9B,GAAA8B,EAAA,SAKrBC,QAAQC,IAAGF,EAAA9B,IAAQ,yBAAA8B,EAAA7B,OAAA,GAAA4B,EAAA,kBAM1B,gBApBsBI,GAAA,OAAAL,EAAA1B,MAAA,KAAAC,UAAA,KA0BvB,YAAoB+B,IAAhB7F,GAAkC8F,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,MAGnCvE,GAYDwE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASF,SAAA,EAGpBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EAGjBC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,KAAGlF,EAASqF,SAAS,SAGzBF,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CACAC,UAAU,OACVC,GAAI,CACA,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,SAEtCC,YAAU,EACVC,aAAa,MAAKV,SAAA,EAMlBF,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CACNT,UAAU,MACVU,UAAQ,EAERC,MAAM,aACNC,GAAG,aAEHC,SAAU,SAAC5C,GAAC,OAAKrC,EAASqC,EAAEE,OAAO2C,MAAM,EAGzCC,WAAS,KAObnB,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CACNT,UAAU,MACVU,UAAQ,EAERC,MAAM,eACNC,GAAG,mBAEHE,MAAO/E,EAEP8E,SAAU,SAAC5C,GAAC,OAAKjC,EAAeiC,EAAEE,OAAO2C,MAAM,KASnDlB,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACC,QAAS1E,EAAmB2E,QAAQ,YAAWpB,SAAC,2BAKhEF,EAAAA,EAAAA,KAAA,UAYAA,EAAAA,EAAAA,KAAA,SAAOuB,KAAK,WAAW/C,KAAK,YACxBC,SAAUrD,EAASoG,MAAK,SAACC,GAAI,OAAyB,KAAhB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM3C,UAAkB,IAAGmC,SAAU7C,KAI3E4B,EAAAA,EAAAA,KAAA,SAAOI,UAAU,sBAAqBF,UAGlCF,EAAAA,EAAAA,KAAA,SAAAE,SAEK9E,EAASuD,KAAI,SAACC,EAAM8C,GAAK,OAGtBvB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EAEIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,KAACF,EAAAA,EAAAA,KAAA,SAAOuB,KAAK,WAAW/C,KAAMI,EAAKG,GAAIN,SAAa,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAME,aAAa,EAAOmC,SAAU7C,QAGxF+B,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,IAAEtB,EAAKE,UAAY,OAAS,QAAQ,KAAGF,EAAKG,GAAG,QAEnDoB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,MAAItB,EAAKJ,KAAK,QAElB2B,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,MAAItB,EAAK+C,YAAY,QAEzBxB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,MAAItB,EAAKgD,YAAY,QAGzB5B,EAAAA,EAAAA,KAAA,MAAAE,UAEIF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAI,CAACzB,UAAU,0BAA0B0B,GAAE,WAAAC,OAAanD,EAAKG,IAAKmB,SAAC,aAhBnEwB,EAqBJ,SAQjB1B,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACC,QAASrC,EAAcsC,QAAQ,YAAWpB,SAAC,YACnDF,EAAAA,EAAAA,KAACgC,EAAAA,EAAQ,CACLpH,KAAMA,EACNqH,iBAAkB,IAClBC,QAAS,kBAAMrH,GAAQ,EAAM,EAC7BL,QAASA,OA9Hb,yBAsIZ,C","sources":["components/AsignHomeWork.js"],"sourcesContent":["import { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { useContext } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\nimport Box from '@mui/material/Box';\r\n\r\nimport API from \"./API\";\r\n\r\n\r\nimport noteContext from './NoteContext';\r\n\r\n\r\nexport default function AsignHomeWork() {\r\n\r\n    const { homework_id } = useParams();\r\n\r\n    const [message, setmessage] = useState(\"\");\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [HomeWork, setHomeworkDetail] = useState();\r\n\r\n    // const [userData, setUserdata]= useState([]);\r\n    const [students, setStudents] = useState([]);\r\n    const [error, setError] = useState(\"%\");\r\n    const [loadingbar, setHideLoading] = useState(false);\r\n\r\n    const [student_class, setClass] = useState(1);\r\n    const [student_name, setStudentName] = useState();\r\n    const navigate = useNavigate();\r\n    const a = useContext(noteContext);\r\n    let token = a.token;\r\n\r\n\r\n    const fetchStudentsData = async () => {\r\n\r\n        try {\r\n            const res = await API.get(\"students/\" + student_class + \"/\" + student_name, {\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            });\r\n            setStudents(res.data);\r\n\r\n            setHideLoading(true);\r\n        }\r\n        catch (error) {\r\n            setError(error);\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (a.login_status === null)\r\n            navigate(\"/login\")\r\n\r\n\r\n        else {\r\n\r\n            fetchHomeWorkInfo(homework_id);\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, checked } = e.target;\r\n\r\n\r\n\r\n        if (name === \"allselect\") {\r\n            const checkedvalue = students.map((item) => { return { ...item, isChecked: checked } });\r\n\r\n            setStudents(checkedvalue);\r\n        } else {\r\n\r\n\r\n            const checkedvalue = students.map((item) =>\r\n                item.sr === name ? { ...item, isChecked: checked } : item);\r\n\r\n\r\n\r\n\r\n\r\n            setStudents(checkedvalue);\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handlesubmit = async () => {\r\n\r\n        const filteredArr = students.filter(e => e.isChecked === true);\r\n\r\n\r\n        var reqdata = {\r\n\r\n\r\n            \"homework_id\": homework_id,\r\n            \"Students\": filteredArr\r\n\r\n        }\r\n\r\n        const res = await API.post(\"hw/setBulkHomework\", reqdata, {\r\n            headers: {\r\n                'content-type': 'text/json', Authorization: 'Bearer ' + token\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        const dt = res.data;\r\n\r\n        setmessage(dt.message);\r\n\r\n\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const fetchHomeWorkInfo = async (homework_id) => {\r\n\r\n        try {\r\n            const res = await API.get(\"master/homework/\" + homework_id, {\r\n                headers: {\r\n                    'content-type': 'text/json', Authorization: 'Bearer ' + token\r\n                }\r\n            });\r\n            setHomeworkDetail(res.data);\r\n            setHideLoading(true);\r\n\r\n        }\r\n        catch (error) {\r\n\r\n            console.log(error);\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    if (homework_id === undefined) return <> </>;\r\n\r\n\r\n    if (!loadingbar)\r\n\r\n\r\n        return (\r\n\r\n\r\n            \"Loading... please wait \"\r\n        )\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"sakshmb\">\r\n\r\n\r\n            <div className=\"mb-3\">\r\n\r\n\r\n                <h4>  {HomeWork.homework}  </h4>\r\n\r\n\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& > :not(style)': { m: 1, width: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n\r\n\r\n\r\n\r\n                    <TextField\r\n                        className=\"mr5\"\r\n                        required\r\n\r\n                        label=\"Type Class\"\r\n                        id=\"type_class\"\r\n\r\n                        onChange={(e) => setClass(e.target.value)}\r\n\r\n\r\n                        autoFocus\r\n                    />\r\n\r\n\r\n\r\n\r\n\r\n                    <TextField\r\n                        className=\"mr5\"\r\n                        required\r\n\r\n                        label=\"Student Name\"\r\n                        id=\"type_studentname\"\r\n\r\n                        value={student_name}\r\n\r\n                        onChange={(e) => setStudentName(e.target.value)}\r\n\r\n\r\n\r\n                    />\r\n\r\n\r\n\r\n\r\n                    <Button onClick={fetchStudentsData} variant=\"contained\">Search Students</Button>\r\n\r\n                </Box>\r\n            </div>\r\n\r\n            <hr >\r\n            </hr>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <input type=\"checkbox\" name=\"allselect\"\r\n                checked={!students.some((user) => user?.isChecked !== true)} onChange={handleChange} />\r\n\r\n\r\n\r\n            <table className=\"table  table-auto  \">\r\n\r\n\r\n                <tbody>\r\n\r\n                    {students.map((item, index) => (\r\n\r\n\r\n                        <tr key={index}>\r\n\r\n                            <th> <input type=\"checkbox\" name={item.sr} checked={item?.isChecked || false} onChange={handleChange} /></th>\r\n\r\n\r\n                            <td> {item.isChecked ? \"true\" : 'false'}  {item.sr} </td>\r\n\r\n                            <td>   {item.name} </td>\r\n\r\n                            <td>   {item.father_name} </td>\r\n\r\n                            <td>   {item.mother_name} </td>\r\n\r\n\r\n                            <td>\r\n\r\n                                <Link className=\"btn btn-outline-success\" to={`student/${item.sr}`}>View</Link>\r\n\r\n\r\n\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n\r\n\r\n            <Button onClick={handlesubmit} variant=\"contained\">Asign </Button>\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={2000}\r\n                onClose={() => setOpen(false)}\r\n                message={message}\r\n\r\n            />\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n"],"names":["AsignHomeWork","homework_id","useParams","_useState","useState","_useState2","_slicedToArray","message","setmessage","_useState3","_useState4","open","setOpen","_useState5","_useState6","HomeWork","setHomeworkDetail","_useState7","_useState8","students","setStudents","_useState9","_useState10","setError","_useState11","_useState12","loadingbar","setHideLoading","_useState13","_useState14","student_class","setClass","_useState15","_useState16","student_name","setStudentName","navigate","useNavigate","a","useContext","noteContext","token","fetchStudentsData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","API","get","headers","Accept","Authorization","sent","data","t0","stop","apply","arguments","useEffect","login_status","fetchHomeWorkInfo","handleChange","e","_e$target","target","name","checked","checkedvalue","map","item","_objectSpread","isChecked","sr","handlesubmit","_ref2","_callee2","filteredArr","reqdata","dt","_context2","filter","post","_ref3","_callee3","_context3","console","log","_x","undefined","_jsx","_Fragment","children","_jsxs","className","homework","Box","component","sx","m","width","noValidate","autoComplete","TextField","required","label","id","onChange","value","autoFocus","Button","onClick","variant","type","some","user","index","father_name","mother_name","Link","to","concat","Snackbar","autoHideDuration","onClose"],"sourceRoot":""}