{"version":3,"file":"static/js/672.d29f1344.chunk.js","mappings":"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","sources":["components/Homework.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport { useContext, useState, useEffect } from 'react';\r\n\r\nimport noteContext from './NoteContext';\r\n\r\n\r\nimport API from \"./API\";\r\n\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Snackbar from '@mui/material/Snackbar'; import Autocomplete from '@mui/material/Autocomplete';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\r\n\r\nexport default function Homework() {\r\n\r\n\r\n\r\n\r\n    const { sr } = useParams();\r\n\r\n\r\n    const [message, setmessage] = useState(\"\");\r\n\r\n    const [homeworkhistory, setHomeworkHistory] = useState([]);\r\n    const [masterSubjects, setMasterSubjects] = useState([]);\r\n    const [masterHomeworks, setmasterHomeworks] = useState([]);\r\n\r\n\r\n\r\n    const [homework, setHomework] = useState(\"\");\r\n\r\n    const [subject, setSubject] = useState(\"\");\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n\r\n    const data = useContext(noteContext);\r\n\r\n\r\n    const [student, setStudent] = useState();\r\n\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    let token = data.token;\r\n\r\n\r\n\r\n    const handlesubmit = async () => {\r\n\r\n\r\n        var reqdata = {\r\n\r\n            \"sr\": sr,\r\n            \"homework\": homework,\r\n            \"subject\": subject\r\n\r\n        }\r\n\r\n        const res = await API.post(\"setHomework\", reqdata, {\r\n            headers: {\r\n                'content-type': 'text/json', Authorization: 'Bearer ' + token\r\n            }\r\n        });\r\n\r\n\r\n\r\n        fetchAPIData(sr);\r\n        const dt = res.data;\r\n\r\n        setmessage(dt.message);\r\n\r\n\r\n        setOpen(true);\r\n\r\n        //    navigate(\"/\");\r\n\r\n    }\r\n    const deletehomework = async (item) => {\r\n\r\n\r\n\r\n        const res = await API.post(\"delete_homework \", item, {\r\n            headers: {\r\n                'content-type': 'text/json', Authorization: 'Bearer ' + token\r\n            }\r\n        });\r\n        setHomeworkHistory(res.data);\r\n\r\n    }\r\n\r\n    const markComplete = async (item) => {\r\n\r\n        item.status = \"Completed\";\r\n        item.remark = \".\";\r\n\r\n        const res = await API.post(\"homework_mark_complete\", item, {\r\n            headers: {\r\n                'content-type': 'text/json', Authorization: 'Bearer ' + token\r\n            }\r\n        });\r\n        setHomeworkHistory(res.data);\r\n\r\n    }\r\n\r\n    const fetchAPIData = async (sr) => {\r\n\r\n        try {\r\n            const res = await API.get(\"getHomework/\" + sr, {\r\n                headers: {\r\n                    'content-type': 'text/json', Authorization: 'Bearer ' + token\r\n                }\r\n            });\r\n            setHomeworkHistory(res.data);\r\n\r\n\r\n            const res1 = await API.get(\"student/\" + sr, {\r\n                headers: {\r\n                    'content-type': 'text/json', Authorization: 'Bearer ' + token\r\n                }\r\n            });\r\n\r\n\r\n            setStudent(res1.data);\r\n\r\n        }\r\n        catch (error) {\r\n\r\n            console.log(error);\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const fetchSubjects = async (sr) => {\r\n\r\n        try {\r\n            const res = await API.get(\"master/Subjects/\" + sr, {\r\n                headers: {\r\n                    'content-type': 'text/json', Authorization: 'Bearer ' + token\r\n                }\r\n            });\r\n            setMasterSubjects(res.data);\r\n\r\n\r\n\r\n\r\n        }\r\n        catch (error) {\r\n\r\n            console.log(error);\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const fetchHomeWorks = async (sr) => {\r\n\r\n        try {\r\n            const res = await API.get(\"master/Homeworks/\" + sr, {\r\n                headers: {\r\n                    'content-type': 'text/json', Authorization: 'Bearer ' + token\r\n                }\r\n            });\r\n\r\n\r\n            setmasterHomeworks(res.data);\r\n\r\n\r\n\r\n        }\r\n        catch (error) {\r\n\r\n            console.log(error);\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        fetchAPIData(sr);\r\n        fetchSubjects(sr);\r\n        fetchHomeWorks(sr);\r\n\r\n\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    if (student == undefined) return \"\";\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <h4>Set New HomeWork </h4>\r\n            <strong>\r\n\r\n                [ {student.sr} ]    {student.name} s/o   {student.father_name}\r\n            </strong>\r\n\r\n\r\n\r\n\r\n            <hr />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>New Homework</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n\r\n                    <div className=\"mb-3\">\r\n\r\n\r\n\r\n\r\n                        <Form.Label>Subject</Form.Label>\r\n                        <Form.Select onChange={(e) => setSubject(e.target.value)} >\r\n                            {masterSubjects.map((e) => <option value={e} key={e}>{e}</option>)}\r\n                        </Form.Select>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n\r\n\r\n                        <Form.Label>HomeWork</Form.Label>\r\n\r\n\r\n                        <Form.Select onChange={(e) => setHomework(e.target.value)} >\r\n                            {masterHomeworks.map((e) => <option value={e.id} key={e.id}>{e.homework}</option>)}\r\n                        </Form.Select>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"mb-3\">\r\n\r\n                        <Button onClick={handlesubmit} size=\"large\" variant=\"contained\">Set Homework</Button>\r\n\r\n                        <Snackbar\r\n                            open={open}\r\n                            autoHideDuration={2000}\r\n                            onClose={() => setOpen(false)}\r\n                            message={message}\r\n\r\n                        />\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n\r\n\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel2a-content\"\r\n                    id=\"panel2a-header\"\r\n                >\r\n                    <Typography>Past Homework</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n\r\n\r\n                    <table className=\"table  table-auto  \">\r\n\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>   Subject </th>\r\n                                <th>  Homework  </th>\r\n                                <th>  Start Date  </th>\r\n                                <th> Create Date  </th>\r\n                                <th>  Status </th>\r\n                                <th> Mark complete  </th>\r\n\r\n                                <th> Delete  </th>\r\n\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {homeworkhistory.map((item, index) => (\r\n\r\n\r\n                                <tr key={index}>\r\n\r\n\r\n\r\n                                    <td>   {item.subject} </td>\r\n\r\n                                    <td>   {item.homework} </td>\r\n\r\n                                    <td>   {item.created_at} </td>\r\n\r\n                                    <td>    {item.status === \"Completed\" && <>{item.updated_at}</>}\r\n                                        .</td>\r\n\r\n                                    <td>   {item.status} </td>\r\n\r\n                                    <td>      <Button onClick={() => markComplete(item)} variant=\"contained\"> <DoneAllIcon />    </Button>\r\n                                    </td>\r\n\r\n                                    <td>   <Button onClick={() => deletehomework(item)} variant=\"contained\"> <DeleteForeverIcon /></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}"],"names":["Homework","sr","useParams","_useState","useState","_useState2","_slicedToArray","message","setmessage","_useState3","_useState4","homeworkhistory","setHomeworkHistory","_useState5","_useState6","masterSubjects","setMasterSubjects","_useState7","_useState8","masterHomeworks","setmasterHomeworks","_useState9","_useState10","homework","setHomework","_useState11","_useState12","subject","setSubject","_useState13","_useState14","open","setOpen","data","useContext","noteContext","_useState15","_useState16","student","setStudent","token","useNavigate","handlesubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","reqdata","res","dt","wrap","_context","prev","next","API","post","headers","Authorization","sent","fetchAPIData","stop","apply","arguments","deletehomework","_ref2","_callee2","item","_context2","_x","markComplete","_ref3","_callee3","_context3","status","remark","_x2","_ref4","_callee4","res1","_context4","get","t0","console","log","_x3","fetchSubjects","_ref5","_callee5","_context5","_x4","fetchHomeWorks","_ref6","_callee6","_context6","_x5","useEffect","undefined","_jsxs","_Fragment","children","_jsx","name","father_name","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","id","Typography","AccordionDetails","className","Form","Label","Select","onChange","e","target","value","map","Button","onClick","size","variant","Snackbar","autoHideDuration","onClose","index","created_at","updated_at","DoneAllIcon","DeleteForeverIcon"],"sourceRoot":""}